{"ast":null,"code":"var _jsxFileName = \"/home/tariq/track_expense/src/components/transContext.js\",\n    _s = $RefreshSig$();\n\nimport { React, createContext, useReducer } from 'react';\nimport TransactionReducer from './transReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTrans = [{\n  amount: 400,\n  desc: \"Cash\"\n}, {\n  amount: -50,\n  desc: \"book\"\n}, {\n  amount: -200,\n  desc: \"Cash\"\n}];\nexport const TransactionContext = /*#__PURE__*/createContext(initialTrans);\nexport const TransactionProvider = ({}) => {\n  _s();\n\n  let [state, dispatch] = useReducer(TransactionReducer, initialTrans);\n\n  function addTransaction(transObj) {\n    dispatch({\n      type: \"ADD\",\n      payload: {\n        amount: transObj.amount,\n        desc: transObj.desc\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions: state,\n      addTransaction\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionProvider, \"RGIQ35ch7aXHGMnVNFx8HXMuSn0=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"sources":["/home/tariq/track_expense/src/components/transContext.js"],"names":["React","createContext","useReducer","TransactionReducer","initialTrans","amount","desc","TransactionContext","TransactionProvider","state","dispatch","addTransaction","transObj","type","payload","transactions"],"mappings":";;;AAAA,SAAQA,KAAR,EAAgBC,aAAhB,EAA+BC,UAA/B,QAAgD,OAAhD;AACA,OAAOC,kBAAP,MAAgC,gBAAhC;;AACA,MAAMC,YAAY,GAAC,CACf;AAACC,EAAAA,MAAM,EAAE,GAAT;AAAcC,EAAAA,IAAI,EAAE;AAApB,CADe,EAEf;AAACD,EAAAA,MAAM,EAAE,CAAC,EAAV;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAFe,EAGf;AAACD,EAAAA,MAAM,EAAE,CAAC,GAAV;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAHe,CAAnB;AAOA,OAAO,MAAMC,kBAAkB,gBAAGN,aAAa,CAACG,YAAD,CAAxC;AAIP,OAAO,MAAMI,mBAAmB,GAAG,CAAC,EAAD,KAAM;AAAA;;AACrC,MAAI,CAACC,KAAD,EAASC,QAAT,IAAqBR,UAAU,CAACC,kBAAD,EAAsBC,YAAtB,CAAnC;;AAEA,WAASO,cAAT,CAAwBC,QAAxB,EAAiC;AAC7BF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,OAAO,EAAE;AACLT,QAAAA,MAAM,EAAGO,QAAQ,CAACP,MADb;AAELC,QAAAA,IAAI,EAAEM,QAAQ,CAACN;AAFV;AAFJ,KAAD,CAAR;AAOH;;AACD,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAChCS,MAAAA,YAAY,EAAEN,KADkB;AAEpCE,MAAAA;AAFoC;AAApC;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArBM;;GAAMH,mB;;KAAAA,mB","sourcesContent":["import {React , createContext, useReducer} from 'react';\nimport TransactionReducer  from './transReducer';\nconst initialTrans=[\n    {amount: 400, desc: \"Cash\"},\n    {amount: -50, desc: \"book\"},\n    {amount: -200, desc: \"Cash\"}\n]\n\n\nexport const TransactionContext = createContext(initialTrans);\n\n\n\nexport const TransactionProvider = ({})=>{\n    let [state , dispatch] = useReducer(TransactionReducer , initialTrans)\n\n    function addTransaction(transObj){\n        dispatch({\n            type: \"ADD\",\n            payload: {\n                amount : transObj.amount,\n                desc: transObj.desc\n            },\n        })\n    }\n    return(\n        <TransactionContext.Provider value={{\n            transactions: state,\n        addTransaction}}\n\n        ></TransactionContext.Provider>\n        \n\n    )\n}"]},"metadata":{},"sourceType":"module"}