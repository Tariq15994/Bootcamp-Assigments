{"ast":null,"code":"var _jsxFileName = \"/home/tariq/track_expense/src/components/transContext.js\",\n    _s = $RefreshSig$();\n\nimport { React, createContext, useReducer } from 'react';\nimport TransactionReducer from './transReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTrans = [{\n  amount: 400,\n  desc: \"Cash\"\n}, {\n  amount: -50,\n  desc: \"book\"\n}, {\n  amount: -200,\n  desc: \"Cash\"\n}];\nexport const TransactionContext = /*#__PURE__*/createContext(initialTrans);\nexport const TransactionProvider = ({\n  children\n}) => {\n  _s();\n\n  let [state, dispatch] = useReducer(TransactionReducer, initialTrans);\n\n  function addTransaction(transObj) {\n    dispatch({\n      type: \"ADD\",\n      payload: {\n        amount: transObj.amount,\n        desc: transObj.desc\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions: state,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionProvider, \"XJp569PZ6mbrIzgFji7Ukde5d68=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"sources":["/home/tariq/track_expense/src/components/transContext.js"],"names":["React","createContext","useReducer","TransactionReducer","initialTrans","amount","desc","TransactionContext","TransactionProvider","children","state","dispatch","addTransaction","transObj","type","payload","transactions"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;;AACA,MAAMC,YAAY,GAAG,CACjB;AAAEC,EAAAA,MAAM,EAAE,GAAV;AAAeC,EAAAA,IAAI,EAAE;AAArB,CADiB,EAEjB;AAAED,EAAAA,MAAM,EAAE,CAAC,EAAX;AAAeC,EAAAA,IAAI,EAAE;AAArB,CAFiB,EAGjB;AAAED,EAAAA,MAAM,EAAE,CAAC,GAAX;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAHiB,CAArB;AAOA,OAAO,MAAMC,kBAAkB,gBAAGN,aAAa,CAACG,YAAD,CAAxC;AAIP,OAAO,MAAMI,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,kBAAD,EAAqBC,YAArB,CAAlC;;AAEA,WAASQ,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,OAAO,EAAE;AACLV,QAAAA,MAAM,EAAEQ,QAAQ,CAACR,MADZ;AAELC,QAAAA,IAAI,EAAEO,QAAQ,CAACP;AAFV;AAFJ,KAAD,CAAR;AAOH;;AACD,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAChCU,MAAAA,YAAY,EAAEN,KADkB;AAEhCE,MAAAA;AAFgC,KAApC;AAAA,cAIKH;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtBM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { React, createContext, useReducer } from 'react';\nimport TransactionReducer from './transReducer';\nconst initialTrans = [\n    { amount: 400, desc: \"Cash\" },\n    { amount: -50, desc: \"book\" },\n    { amount: -200, desc: \"Cash\" }\n]\n\n\nexport const TransactionContext = createContext(initialTrans);\n\n\n\nexport const TransactionProvider = ({ children }) => {\n    let [state, dispatch] = useReducer(TransactionReducer, initialTrans)\n\n    function addTransaction(transObj) {\n        dispatch({\n            type: \"ADD\",\n            payload: {\n                amount: transObj.amount,\n                desc: transObj.desc\n            },\n        })\n    }\n    return (\n        <TransactionContext.Provider value={{\n            transactions: state,\n            addTransaction\n        }}>\n            {children}\n        </TransactionContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}