{"ast":null,"code":"var _jsxFileName = \"/home/tariq/Documents/GitHub/Bootcamp2020-Assigments/track_expense/src/components/transContext.js\",\n    _s = $RefreshSig$();\n\nimport { React, createContext, useReducer } from 'react';\nimport TransactionReducer from './transReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTrans = {\n  transactions: []\n};\nexport const TransactionContext = /*#__PURE__*/createContext(initialTrans);\nexport const TransactionProvider = ({\n  children\n}) => {\n  _s();\n\n  let [state, dispatch] = useReducer(TransactionReducer, initialTrans);\n\n  function addTransaction(transObj) {\n    dispatch({\n      type: \"ADD\",\n      payload: transObj\n    });\n  }\n\n  function delTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      addTransaction,\n      delTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TransactionProvider, \"XJp569PZ6mbrIzgFji7Ukde5d68=\");\n\n_c = TransactionProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionProvider\");","map":{"version":3,"sources":["/home/tariq/Documents/GitHub/Bootcamp2020-Assigments/track_expense/src/components/transContext.js"],"names":["React","createContext","useReducer","TransactionReducer","initialTrans","transactions","TransactionContext","TransactionProvider","children","state","dispatch","addTransaction","transObj","type","payload","delTransaction","id"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,kBAAP,MAA+B,gBAA/B;;AACA,MAAMC,YAAY,GAAE;AAACC,EAAAA,YAAY,EAAG;AAAhB,CAApB;AAOA,OAAO,MAAMC,kBAAkB,gBAAGL,aAAa,CAACG,YAAD,CAAxC;AAIP,OAAO,MAAMG,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjD,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAACC,kBAAD,EAAqBC,YAArB,CAAlC;;AAEA,WAASO,cAAT,CAAwBC,QAAxB,EAAkC;AAC9BF,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH;;AACD,WAASG,cAAT,CAAwBC,EAAxB,EAA4B;AACxBN,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH;;AAED,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAChCX,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADY;AAEhCM,MAAAA,cAFgC;AAGhCI,MAAAA;AAHgC,KAApC;AAAA,cAKKP;AALL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CA5BM;;GAAMD,mB;;KAAAA,mB","sourcesContent":["import { React, createContext, useReducer } from 'react';\nimport TransactionReducer from './transReducer';\nconst initialTrans ={transactions : [\n    \n]\n    }\n\n\n\nexport const TransactionContext = createContext(initialTrans);\n\n\n\nexport const TransactionProvider = ({ children }) => {\n    let [state, dispatch] = useReducer(TransactionReducer, initialTrans)\n\n    function addTransaction(transObj) {\n        dispatch({\n            type: \"ADD\",\n            payload: transObj,\n        });\n\n    }\n    function delTransaction(id) {\n        dispatch({\n            type: \"DELETE_TRANSACTION\",\n            payload: id\n        });\n    }\n\n    return (\n        <TransactionContext.Provider value={{\n            transactions: state.transactions,\n            addTransaction,\n            delTransaction\n        }}>\n            {children}\n        </TransactionContext.Provider>\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}